// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using DigitalStoreModel.Models.commerce;
using DigitalStoreModel.Models.commerce.relations;
using DigitalStoreModel.Models.core;
using DigitalStoreModel.Models.games;
using DigitalStoreModel.Models.games.lookups;
using DigitalStoreModel.Models.games.relations;
using DigitalStoreModel.Models.geography;
using DigitalStoreModel.Models.users;
using DigitalStoreModel.Models.users.relations;
using Microsoft.EntityFrameworkCore;

namespace DigitalStoreModel.Models.Core;

public partial class DigitalStoreDBContext : DbContext
{
    public DigitalStoreDBContext(DbContextOptions<DigitalStoreDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Biblioteca> Bibliotecas { get; set; }

    public virtual DbSet<Calle> Calles { get; set; }

    public virtual DbSet<DatosPagosGuardado> DatosPagosGuardados { get; set; }

    public virtual DbSet<Desarrolladora> Desarrolladoras { get; set; }

    public virtual DbSet<Descuento> Descuentos { get; set; }

    public virtual DbSet<DescuentosProducto> DescuentosProductos { get; set; }

    public virtual DbSet<DetallesTransaccion> DetallesTransacciones { get; set; }

    public virtual DbSet<Direccion> Direcciones { get; set; }

    public virtual DbSet<Dlc> Dlcs { get; set; }

    public virtual DbSet<Etiqueta> Etiquetas { get; set; }

    public virtual DbSet<FormasPago> FormasPagos { get; set; }

    public virtual DbSet<Genero> Generos { get; set; }

    public virtual DbSet<Juego> Juegos { get; set; }

    public virtual DbSet<JuegosEtiqueta> JuegosEtiquetas { get; set; }

    public virtual DbSet<Logro> Logros { get; set; }

    public virtual DbSet<Pais> Paises { get; set; }

    public virtual DbSet<Pegi> Pegis { get; set; }

    public virtual DbSet<PreciosProducto> PreciosProductos { get; set; }

    public virtual DbSet<Producto> Productos { get; set; }

    public virtual DbSet<Provincia> Provincias { get; set; }

    public virtual DbSet<Publisher> Publishers { get; set; }

    public virtual DbSet<Region> Regiones { get; set; }

    public virtual DbSet<SistemasOperativo> SistemasOperativos { get; set; }

    public virtual DbSet<Transaccion> Transacciones { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<UsuariosJuego> UsuariosJuegos { get; set; }

    public virtual DbSet<UsuariosLogro> UsuariosLogros { get; set; }

    public virtual DbSet<Wishlist> Wishlists { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Biblioteca>(entity =>
        {
            entity.HasKey(e => e.IdBiblioteca).HasName("PK__bibliote__1EEBBDFEA1126AFC");

            entity.ToTable("bibliotecas");

            entity.Property(e => e.IdBiblioteca).HasColumnName("id_biblioteca");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("descripcion");

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdBibliotecas)
                .UsingEntity<Dictionary<string, object>>(
                    "BibliotecasJuego",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_bibjuegos_juego"),
                    l => l.HasOne<Biblioteca>().WithMany()
                        .HasForeignKey("IdBiblioteca")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_bibjuegos_biblioteca"),
                    j =>
                    {
                        j.HasKey("IdBiblioteca", "IdJuego");
                        j.ToTable("bibliotecas_juegos");
                        j.IndexerProperty<int>("IdBiblioteca").HasColumnName("id_biblioteca");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        modelBuilder.Entity<Calle>(entity =>
        {
            entity.HasKey(e => e.IdCalle).HasName("PK__calles__C031D0884A4D182A");

            entity.ToTable("calles");

            entity.Property(e => e.IdCalle).HasColumnName("id_calle");
            entity.Property(e => e.Calle1)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("calle");
            entity.Property(e => e.IdProv).HasColumnName("id_prov");

            entity.HasOne(d => d.IdProvNavigation).WithMany(p => p.Calles)
                .HasForeignKey(d => d.IdProv)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_calles_provincias");
        });

        modelBuilder.Entity<DatosPagosGuardado>(entity =>
        {
            entity.HasKey(e => e.IdMetodoPagoGuardado).HasName("PK__datos_pa__423A8141A3FAFD6C");

            entity.ToTable("datos_pagos_guardados");

            entity.Property(e => e.IdMetodoPagoGuardado).HasColumnName("id_metodo_pago_guardado");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_forma_pago");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.NumTarjeta)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("num_tarjeta");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.DatosPagosGuardados)
                .HasForeignKey(d => d.IdFormaPago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_formaspago_datosguardados");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.DatosPagosGuardados)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usuario_datos_pagos");
        });

        modelBuilder.Entity<Desarrolladora>(entity =>
        {
            entity.HasKey(e => e.IdDesarrolladora).HasName("PK__desarrol__3BFEC3690C706338");

            entity.ToTable("desarrolladoras");

            entity.Property(e => e.IdDesarrolladora).HasColumnName("id_desarrolladora");
            entity.Property(e => e.EmailContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email_contacto");
            entity.Property(e => e.IdPais).HasColumnName("id_pais");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.SitioWeb)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("sitio_web");

            entity.HasOne(d => d.IdPaisNavigation).WithMany(p => p.Desarrolladoras)
                .HasForeignKey(d => d.IdPais)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_desarrolladoras_pais");

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdDesarrolladoras)
                .UsingEntity<Dictionary<string, object>>(
                    "JuegosDesarrolladora",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegosdes_juego"),
                    l => l.HasOne<Desarrolladora>().WithMany()
                        .HasForeignKey("IdDesarrolladora")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegosdes_desarrolladora"),
                    j =>
                    {
                        j.HasKey("IdDesarrolladora", "IdJuego");
                        j.ToTable("juegos_desarrolladoras");
                        j.IndexerProperty<int>("IdDesarrolladora").HasColumnName("id_desarrolladora");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        modelBuilder.Entity<Descuento>(entity =>
        {
            entity.HasKey(e => e.IdDescuento).HasName("PK__descuent__4F9A1A8063A7A4E5");

            entity.ToTable("descuentos");

            entity.Property(e => e.IdDescuento).HasColumnName("id_descuento");
            entity.Property(e => e.FechaFin).HasColumnName("fecha_fin");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<DescuentosProducto>(entity =>
        {
            entity.HasKey(e => e.IdDescuentoProducto).HasName("PK__descuent__75184440E20FB354");

            entity.ToTable("descuentos_producto");

            entity.Property(e => e.IdDescuentoProducto).HasColumnName("id_descuento_producto");
            entity.Property(e => e.FechaFin).HasColumnName("fecha_fin");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.IdDescuento).HasColumnName("id_descuento");
            entity.Property(e => e.IdProducto).HasColumnName("id_producto");
            entity.Property(e => e.Porcentaje)
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("porcentaje");

            entity.HasOne(d => d.IdDescuentoNavigation).WithMany(p => p.DescuentosProductos)
                .HasForeignKey(d => d.IdDescuento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_descprod_descuento");

            entity.HasOne(d => d.IdProductoNavigation).WithMany(p => p.DescuentosProductos)
                .HasForeignKey(d => d.IdProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_descprod_producto");
        });

        modelBuilder.Entity<DetallesTransaccion>(entity =>
        {
            entity.HasKey(e => e.IdDetalleTransaccion).HasName("PK__detalles__315EE85D34219B36");

            entity.ToTable("detalles_transacciones");

            entity.Property(e => e.IdDetalleTransaccion).HasColumnName("id_detalle_transaccion");
            entity.Property(e => e.IdDescuentoProducto).HasColumnName("id_descuento_producto");
            entity.Property(e => e.IdPrecioProducto).HasColumnName("id_precio_producto");
            entity.Property(e => e.IdProducto).HasColumnName("id_producto");
            entity.Property(e => e.IdTransaccion).HasColumnName("id_transaccion");

            entity.HasOne(d => d.IdDescuentoProductoNavigation).WithMany(p => p.DetallesTransacciones)
                .HasForeignKey(d => d.IdDescuentoProducto)
                .HasConstraintName("FK_dettrans_descuento");

            entity.HasOne(d => d.IdPrecioProductoNavigation).WithMany(p => p.DetallesTransacciones)
                .HasForeignKey(d => d.IdPrecioProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dettrans_precio");

            entity.HasOne(d => d.IdProductoNavigation).WithMany(p => p.DetallesTransacciones)
                .HasForeignKey(d => d.IdProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dettrans_producto");

            entity.HasOne(d => d.IdTransaccionNavigation).WithMany(p => p.DetallesTransacciones)
                .HasForeignKey(d => d.IdTransaccion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dettrans_transaccion");
        });

        modelBuilder.Entity<Direccion>(entity =>
        {
            entity.HasKey(e => e.IdDireccion).HasName("PK__direccio__25C35D072641BE57");

            entity.ToTable("direcciones");

            entity.Property(e => e.IdDireccion).HasColumnName("id_direccion");
            entity.Property(e => e.CodigoPostal)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("codigo_postal");
            entity.Property(e => e.IdCalle).HasColumnName("id_calle");
            entity.Property(e => e.Numero).HasColumnName("numero");

            entity.HasOne(d => d.IdCalleNavigation).WithMany(p => p.Direcciones)
                .HasForeignKey(d => d.IdCalle)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_direcciones_calles");
        });

        modelBuilder.Entity<Dlc>(entity =>
        {
            entity.HasKey(e => e.IdDlc).HasName("PK__dlcs__D5EA9A84A8448FF9");

            entity.ToTable("dlcs");

            entity.Property(e => e.IdDlc).HasColumnName("id_dlc");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Estado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.FechaLanzamiento).HasColumnName("fecha_lanzamiento");
            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.IdPegi).HasColumnName("id_pegi");

            entity.HasOne(d => d.IdJuegoNavigation).WithMany(p => p.Dlcs)
                .HasForeignKey(d => d.IdJuego)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dlcs_juegos");

            entity.HasOne(d => d.IdPegiNavigation).WithMany(p => p.Dlcs)
                .HasForeignKey(d => d.IdPegi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dlcs_pegi");
        });

        modelBuilder.Entity<Etiqueta>(entity =>
        {
            entity.HasKey(e => e.IdEtiqueta).HasName("PK__etiqueta__FA0DD2AD51A4F9DD");

            entity.ToTable("etiquetas");

            entity.Property(e => e.IdEtiqueta).HasColumnName("id_etiqueta");
            entity.Property(e => e.Etiqueta1)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("etiqueta");
        });

        modelBuilder.Entity<FormasPago>(entity =>
        {
            entity.HasKey(e => e.IdFormaPago).HasName("PK__formas_p__DA9B39EEED5F15B6");

            entity.ToTable("formas_pago");

            entity.Property(e => e.IdFormaPago).HasColumnName("id_forma_pago");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Genero>(entity =>
        {
            entity.HasKey(e => e.IdGenero).HasName("PK__generos__99A8E4F95139608C");

            entity.ToTable("generos");

            entity.Property(e => e.IdGenero).HasColumnName("id_genero");
            entity.Property(e => e.Genero1)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("genero");

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdGeneros)
                .UsingEntity<Dictionary<string, object>>(
                    "JuegosGenero",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegosg_juego"),
                    l => l.HasOne<Genero>().WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegosg_genero"),
                    j =>
                    {
                        j.HasKey("IdGenero", "IdJuego");
                        j.ToTable("juegos_generos");
                        j.IndexerProperty<int>("IdGenero").HasColumnName("id_genero");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        modelBuilder.Entity<Juego>(entity =>
        {
            entity.HasKey(e => e.IdJuego).HasName("PK__juegos__368EED507A0484B8");

            entity.ToTable("juegos");

            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estado");
            entity.Property(e => e.FechaLanzamiento).HasColumnName("fecha_lanzamiento");
            entity.Property(e => e.IdPegi).HasColumnName("id_pegi");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdPegiNavigation).WithMany(p => p.Juegos)
                .HasForeignKey(d => d.IdPegi)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_juegos_pegi");
        });

        modelBuilder.Entity<JuegosEtiqueta>(entity =>
        {
            entity.HasKey(e => new { e.IdEtiqueta, e.IdJuego });

            entity.ToTable("juegos_etiquetas");

            entity.Property(e => e.IdEtiqueta).HasColumnName("id_etiqueta");
            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdEtiquetaNavigation).WithMany(p => p.JuegosEtiqueta)
                .HasForeignKey(d => d.IdEtiqueta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_juegose_etiqueta");

            entity.HasOne(d => d.IdJuegoNavigation).WithMany(p => p.JuegosEtiqueta)
                .HasForeignKey(d => d.IdJuego)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_juegose_juego");
        });

        modelBuilder.Entity<Logro>(entity =>
        {
            entity.HasKey(e => e.IdLogro).HasName("PK__logros__1DEA0055636FB548");

            entity.ToTable("logros");

            entity.Property(e => e.IdLogro).HasColumnName("id_logro");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdJuegoNavigation).WithMany(p => p.Logros)
                .HasForeignKey(d => d.IdJuego)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_logros_juegos");
        });

        modelBuilder.Entity<Pais>(entity =>
        {
            entity.HasKey(e => e.IdPais).HasName("PK__paises__0941A3A795AB6728");

            entity.ToTable("paises");

            entity.Property(e => e.IdPais).HasColumnName("id_pais");
            entity.Property(e => e.IdRegion).HasColumnName("id_region");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("pais");

            entity.HasOne(d => d.IdRegionNavigation).WithMany(p => p.Paises)
                .HasForeignKey(d => d.IdRegion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_paises_regiones");
        });

        modelBuilder.Entity<Pegi>(entity =>
        {
            entity.HasKey(e => e.IdPegi).HasName("PK__pegi__0466E0B6354DE03E");

            entity.ToTable("pegi");

            entity.Property(e => e.IdPegi).HasColumnName("id_pegi");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<PreciosProducto>(entity =>
        {
            entity.HasKey(e => e.IdPrecioProducto).HasName("PK__precios___C6D95EF01F02FC71");

            entity.ToTable("precios_productos");

            entity.Property(e => e.IdPrecioProducto).HasColumnName("id_precio_producto");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.IdProducto).HasColumnName("id_producto");
            entity.Property(e => e.Precio)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio");

            entity.HasOne(d => d.IdProductoNavigation).WithMany(p => p.PreciosProductos)
                .HasForeignKey(d => d.IdProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_precios_productos");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.IdProducto).HasName("PK__producto__FF341C0DABEA26D2");

            entity.ToTable("productos");

            entity.Property(e => e.IdProducto).HasColumnName("id_producto");
            entity.Property(e => e.IdDlc).HasColumnName("id_dlc");
            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("tipo");

            entity.HasOne(d => d.IdDlcNavigation).WithMany(p => p.Productos)
                .HasForeignKey(d => d.IdDlc)
                .HasConstraintName("FK_productos_dlcs");

            entity.HasOne(d => d.IdJuegoNavigation).WithMany(p => p.Productos)
                .HasForeignKey(d => d.IdJuego)
                .HasConstraintName("FK_productos_juegos");
        });

        modelBuilder.Entity<Provincia>(entity =>
        {
            entity.HasKey(e => e.IdProv).HasName("PK__provinci__0DA3485DA18FB2EB");

            entity.ToTable("provincias");

            entity.Property(e => e.IdProv).HasColumnName("id_prov");
            entity.Property(e => e.IdPais).HasColumnName("id_pais");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("provincia");

            entity.HasOne(d => d.IdPaisNavigation).WithMany(p => p.Provincia)
                .HasForeignKey(d => d.IdPais)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_provincias_paises");
        });

        modelBuilder.Entity<Publisher>(entity =>
        {
            entity.HasKey(e => e.IdPublisher).HasName("PK__publishe__08CF5B09F0A13110");

            entity.ToTable("publishers");

            entity.Property(e => e.IdPublisher).HasColumnName("id_publisher");
            entity.Property(e => e.EmailContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email_contacto");
            entity.Property(e => e.IdPais).HasColumnName("id_pais");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.SitioWeb)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("sitio_web");

            entity.HasOne(d => d.IdPaisNavigation).WithMany(p => p.Publishers)
                .HasForeignKey(d => d.IdPais)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_publishers_pais");

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdPublishers)
                .UsingEntity<Dictionary<string, object>>(
                    "JuegosPublisher",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegospub_juego"),
                    l => l.HasOne<Publisher>().WithMany()
                        .HasForeignKey("IdPublisher")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegospub_publisher"),
                    j =>
                    {
                        j.HasKey("IdPublisher", "IdJuego");
                        j.ToTable("juegos_publishers");
                        j.IndexerProperty<int>("IdPublisher").HasColumnName("id_publisher");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        modelBuilder.Entity<Region>(entity =>
        {
            entity.HasKey(e => e.IdRegion).HasName("PK__regiones__3CEC6B52868E308C");

            entity.ToTable("regiones");

            entity.Property(e => e.IdRegion).HasColumnName("id_region");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("region");
        });

        modelBuilder.Entity<SistemasOperativo>(entity =>
        {
            entity.HasKey(e => e.IdSistemaOperativo).HasName("PK__sistemas__AA4F3965E54711E3");

            entity.ToTable("sistemas_operativos");

            entity.Property(e => e.IdSistemaOperativo).HasColumnName("id_sistema_operativo");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdSistemaOperativos)
                .UsingEntity<Dictionary<string, object>>(
                    "SistemasOperativosJuego",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegoso_juego"),
                    l => l.HasOne<SistemasOperativo>().WithMany()
                        .HasForeignKey("IdSistemaOperativo")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_juegoso_sistop"),
                    j =>
                    {
                        j.HasKey("IdSistemaOperativo", "IdJuego");
                        j.ToTable("sistemas_operativos_juegos");
                        j.IndexerProperty<int>("IdSistemaOperativo").HasColumnName("id_sistema_operativo");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        modelBuilder.Entity<Transaccion>(entity =>
        {
            entity.HasKey(e => e.IdTransaccion).HasName("PK__transacc__1EDAC099862A026D");

            entity.ToTable("transacciones");

            entity.Property(e => e.IdTransaccion).HasColumnName("id_transaccion");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdMetodoPagoGuardado).HasColumnName("id_metodo_pago_guardado");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.Tipo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("tipo");

            entity.HasOne(d => d.IdMetodoPagoGuardadoNavigation).WithMany(p => p.Transacciones)
                .HasForeignKey(d => d.IdMetodoPagoGuardado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pago_guardado_transaccion");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Transacciones)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usuario_transaccion");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__usuarios__4E3E04AD9F1C4F77");

            entity.ToTable("usuarios");

            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.Apellido)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FechaNac).HasColumnName("fecha_nac");
            entity.Property(e => e.FechaRegistro).HasColumnName("fecha_registro");
            entity.Property(e => e.IdBiblioteca).HasColumnName("id_biblioteca");
            entity.Property(e => e.IdWishlist).HasColumnName("id_wishlist");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre_usuario");

            entity.HasOne(d => d.IdBibliotecaNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdBiblioteca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_biblioteca_usuario");

            entity.HasOne(d => d.IdWishlistNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdWishlist)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_wishlist_usuario");
        });

        modelBuilder.Entity<UsuariosJuego>(entity =>
        {
            entity.HasKey(e => e.IdUsuarioJuego).HasName("PK__usuarios__C90F336C40EFB470");

            entity.ToTable("usuarios_juegos");

            entity.Property(e => e.IdUsuarioJuego).HasColumnName("id_usuario_juego");
            entity.Property(e => e.FechaAdquisicion).HasColumnName("fecha_adquisicion");
            entity.Property(e => e.IdJuego).HasColumnName("id_juego");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.TiempoTotal).HasColumnName("tiempo_total");
            entity.Property(e => e.UltimaVez)
                .HasColumnType("datetime")
                .HasColumnName("ultima_vez");

            entity.HasOne(d => d.IdJuegoNavigation).WithMany(p => p.UsuariosJuegos)
                .HasForeignKey(d => d.IdJuego)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usujuegos_juego");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.UsuariosJuegos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usujuegos_usuario");
        });

        modelBuilder.Entity<UsuariosLogro>(entity =>
        {
            entity.HasKey(e => e.IdUsuarioLogros).HasName("PK__usuarios__FE0906DCB6CD9A5B");

            entity.ToTable("usuarios_logros");

            entity.Property(e => e.IdUsuarioLogros).HasColumnName("id_usuario_logros");
            entity.Property(e => e.FechaDesbloqueo)
                .HasColumnType("datetime")
                .HasColumnName("fecha_desbloqueo");
            entity.Property(e => e.IdLogro).HasColumnName("id_logro");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");

            entity.HasOne(d => d.IdLogroNavigation).WithMany(p => p.UsuariosLogros)
                .HasForeignKey(d => d.IdLogro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usulogros_logro");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.UsuariosLogros)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_usulogros_usuario");
        });

        modelBuilder.Entity<Wishlist>(entity =>
        {
            entity.HasKey(e => e.IdWishlist).HasName("PK__wishlist__C3C6AAA5F437CC6B");

            entity.ToTable("wishlist");

            entity.Property(e => e.IdWishlist).HasColumnName("id_wishlist");
            entity.Property(e => e.Identificador)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("identificador");

            entity.HasMany(d => d.IdDlcs).WithMany(p => p.IdWishlists)
                .UsingEntity<Dictionary<string, object>>(
                    "WishlistDlc",
                    r => r.HasOne<Dlc>().WithMany()
                        .HasForeignKey("IdDlc")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_wishlist_dlc_dlc"),
                    l => l.HasOne<Wishlist>().WithMany()
                        .HasForeignKey("IdWishlist")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_wishlist_dlc_wishlist"),
                    j =>
                    {
                        j.HasKey("IdWishlist", "IdDlc");
                        j.ToTable("wishlist_dlc");
                        j.IndexerProperty<int>("IdWishlist").HasColumnName("id_wishlist");
                        j.IndexerProperty<int>("IdDlc").HasColumnName("id_dlc");
                    });

            entity.HasMany(d => d.IdJuegos).WithMany(p => p.IdWishlists)
                .UsingEntity<Dictionary<string, object>>(
                    "WishlistJuego",
                    r => r.HasOne<Juego>().WithMany()
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_wishlist_juego_juego"),
                    l => l.HasOne<Wishlist>().WithMany()
                        .HasForeignKey("IdWishlist")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_wishlist_juego_wishlist"),
                    j =>
                    {
                        j.HasKey("IdWishlist", "IdJuego");
                        j.ToTable("wishlist_juegos");
                        j.IndexerProperty<int>("IdWishlist").HasColumnName("id_wishlist");
                        j.IndexerProperty<int>("IdJuego").HasColumnName("id_juego");
                    });
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}